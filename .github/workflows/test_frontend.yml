name: Frontend Tests

on:
  pull_request:  # Ejecutar en todas las Pull Requests
    types:
      - opened
      - synchronize
      - reopened
  push:  # Ejecutar solo en ramas específicas
    branches:
      - main
      - dev

env:
  APP_NAME: BookHub
  DB_HOST: localhost
  DB_PORT: 3306
  DB_USER: root
  DB_PASSWORD: psswd
  DB_NAME: bookhubdb

jobs:

  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql
        env:
          MYSQL_DATABASE: bookhubdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: psswd
          MYSQL_ROOT_PASSWORD: psswd
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    permissions:
      # Gives the action the necessary permissions for publishing new
      # comments in pull requests.
      pull-requests: write
      # Gives the action the necessary permissions for pushing data to the
      # python-coverage-comment-action branch, and for editing existing
      # comments (to avoid publishing multiple comments in the same PR)
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11.x'
    - uses: Gr1N/setup-poetry@v8
    - run: poetry --version
    - name: Install dependencies
      run: |
        cd backend          
        poetry lock
        poetry install
        poetry run alembic upgrade head & > /dev/null
        poetry add selenium
        poetry export --dev --all-extras --without-hashes --format=requirements.txt 1> requirements.txt
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements.txt
        
    - name: Start backend
      run: |
        cd backend
        poetry run uvicorn app.main:app & > /dev/null
    
    - name: Run user that must be created
      run: |
          curl -X 'POST' 'http://127.0.0.1:8000/users/' -H 'accept: application/json' -H 'Content-Type: application/json' \
          -d '{"email": "user_test@test.com", "username": "user_test", "first_name": "user_test", "last_name": "user_test",
          "biography": "string", "password": "contraseña"}'

    - name: Run frontend
      run: |
        cd frontend
        npm install
        npm run dev & > /dev/null
    
    - name: Run tests
      run: |
        cd frontend
        pytest tests
      continue-on-error: true